Description: >
  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String

  SecureSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String

  SecureSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String

  TemplateBucket:
    Type: String
    Default: fargate-demo-cft
    Description: S3 Bucket used for nested templates

  ALBName:
    Type: String

  ClusterName:
    Type: String

  TaskExecutionRoleName:
    Type: String

  ServiceName:
    Type: String
    Default: nginx
    Description: A name for the service

  ImageUrl:
    Type: String
    Description: The url of a docker image that contains the application process that
      will handle the traffic for this service

  ContainerPort:
    Type: Number
    Default: 80
    Description: What port number the application inside the docker container is binding to

  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU

  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container

  Path:
    Type: String
    Default: "*"
    Description: A path on the public load balancer that this service
      should be connected to. Use * to send all load balancer
      traffic to this service.

  Priority:
    Type: Number
    Default: 1
    Description: The priority for the routing rule added to the load balancer.
      This only applies if your have multiple services which have been
      assigned to different paths on the load balancer.

  DesiredCount:
    Type: Number
    Default: 3
    Description: How many copies of the service task to run

  Role:
    Type: String
    Default: ""
    Description: (Optional) An IAM role to give the service's containers if the code within needs to
      access other AWS resources like S3 buckets, DynamoDB tables, etc

  ApiName:
    Type: String

  ApiDescription:
    Type: String

  ApiEndpointType:
    Type: String

  DatabaseUser:
    Type: String
    Description: Database admin account name
    MinLength: 5
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters

  DatabasePassword:
    NoEcho: true
    Type: String
    Description: Database admin account password
    MinLength: 6
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Password must contain only alphanumeric characters

  DatabaseName:
    Type: String
    Description: Database name
    MinLength: 1
    MaxLength: 30
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters

  DatabaseEngine:
    Default: aurora
    Type: String
    Description: Database engines - Aurora MySQL or Aurora PostgreSQL
    ConstraintDescription: Choose an engine from the drop down
    AllowedValues:
    - aurora
    - aurora-postgresql

  EncryptionAtRest:
    Default: false
    Type: String
    Description: The optional flag for encryption at rest (db.t2.small and above)
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
    - true
    - false

  DatabaseInstanceClass:
    Default: db.t2.small
    Type: String
    Description: "Database instance class, e.g. db.t2.micro (free tier) - Engine support: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"
    ConstraintDescription: DB instance class not supported
    AllowedValues:
    - db.t2.small
    - db.t2.medium
    - db.t2.xlarge
    - db.r4.large
    - db.r4.xlarge
    - db.r4.2xlarge
    - db.r4.4xlarge
    - db.r4.8xlarge
    - db.r4.16xlarge

  TemplateBucketName:
    Type: String

Resources:
  Networking:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/Networking.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
        SecureSubnet1CIDR: !Ref SecureSubnet1CIDR
        SecureSubnet2CIDR: !Ref SecureSubnet2CIDR
        StackName: !Ref AWS::StackName

  Infrastructure:
    Type: AWS::CloudFormation::Stack
    DependsOn: Networking
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/Infrastructure.yaml
      Parameters:
        TaskExecutionRoleName: !Ref TaskExecutionRoleName
        ClusterName: !Ref ClusterName
        ALBName: !Ref ALBName
        StackName: !Ref AWS::StackName

  FargateService:
    Type: AWS::CloudFormation::Stack
    DependsOn: Infrastructure
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/Service.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        ImageUrl: !Ref ImageUrl
        ServiceName: !Ref ServiceName
        ContainerPort: !Ref ContainerPort
        ContainerCpu: !Ref ContainerCpu
        ContainerMemory: !Ref ContainerMemory
        Path: !Ref Path
        Priority: !Ref Priority
        DesiredCount: !Ref DesiredCount

  APIGateway:
    Type: AWS::CloudFormation::Stack
    DependsOn: FargateService
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/ApiGateway.yaml
      Parameters:
        ApiName: !Ref ApiName
        ApiDescription: !Ref ApiDescription
        ApiEndpointType: !Ref ApiEndpointType
        Path: !Ref Path
        StackName: !Ref AWS::StackName

  AuroraDB:
    Type: AWS::CloudFormation::Stack
    DependsOn: Infrastructure
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/AuroraDb.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        DatabaseName: !Ref DatabaseName
        DatabaseEngine: !Ref DatabaseEngine
        EncryptionAtRest: !Ref EncryptionAtRest
        DatabaseInstanceClass: !Ref DatabaseInstanceClass