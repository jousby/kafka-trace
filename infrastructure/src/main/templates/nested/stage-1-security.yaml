Description: >
  This template constructs the necessary security groups for our services

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcId:
    Description: The id of the vpc we are building into
    Type: String

  StackName:
    Description: Stack name of the parent stack
    Type: String


Resources:
  ZookeeperSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-zookeeper
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]

  KafkaSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-kafka
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]

  FlinkSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-flink
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]

  SchemaRegistrySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-schemaregistry
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]

  TrafficSimulatorSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-trafficsim
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]

  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-bastion
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]

  OperationsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-operations
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "TCP"
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VpcId']]
